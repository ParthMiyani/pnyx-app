{"version":3,"file":"static/js/7912.2619b149.chunk.js","mappings":"kKAYA,MAAMA,UAAuBC,EAAAA,kBAC3BC,WAAAA,CAAYC,GACV,MAkBMC,EAAU,IAlBO,CACrBC,KAAM,QACNC,WAAAA,GACE,SAASC,EAASC,GAEhB,KAD0B,OAARA,QAAQ,IAARA,IAAAA,EAAUC,SAI5B,OAAOD,CACT,CAC6C,IAAAE,EAA7C,IAAIC,EAAAA,EAAAA,GAAqBC,WAAWC,QAClC,OAA8B,QAA9BH,EAAIE,WAAWC,OAAOL,gBAAQ,IAAAE,GAA1BA,EAA4BI,UACvBF,WAAWC,OAAOL,SAASM,UAAUC,KAAKR,GAE5CA,EAASK,WAAWC,OAAOL,SAEtC,MAIGL,EAAIC,SAETY,MAAM,CACJC,OAAQd,EAAIc,OACZb,UACAc,iBAAkBf,EAAIe,kBAE1B,E","sources":["../node_modules/@thirdweb-dev/wallets/evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js"],"sourcesContent":["import { InjectedConnector } from '../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js';\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-88295886.browser.esm.js';\nimport '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nimport '../../../../dist/errors-9f6736cb.browser.esm.js';\nimport '../../../../dist/url-a45219bd.browser.esm.js';\nimport 'ethers';\nimport '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\n\nclass TrustConnector extends InjectedConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      name: \"Trust\",\n      getProvider() {\n        function getReady(ethereum) {\n          const isTrust = !!ethereum?.isTrust;\n          if (!isTrust) {\n            return;\n          }\n          return ethereum;\n        }\n        if (assertWindowEthereum(globalThis.window)) {\n          if (globalThis.window.ethereum?.providers) {\n            return globalThis.window.ethereum.providers.find(getReady);\n          }\n          return getReady(globalThis.window.ethereum);\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options,\n      connectorStorage: arg.connectorStorage\n    });\n  }\n}\n\nexport { TrustConnector };\n"],"names":["TrustConnector","InjectedConnector","constructor","arg","options","name","getProvider","getReady","ethereum","isTrust","_globalThis$window$et","assertWindowEthereum","globalThis","window","providers","find","super","chains","connectorStorage"],"sourceRoot":""}