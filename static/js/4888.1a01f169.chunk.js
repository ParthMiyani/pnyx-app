(self.webpackChunkclient=self.webpackChunkclient||[]).push([[4888],{69516:(e,t,r)=>{"use strict";r.d(t,{E:()=>l,R:()=>s,S:()=>o,a:()=>c});var n=r(2257),a=r(60874),i=r(99816);const s=(()=>a.z.union([a.z.date().transform((e=>n.O$.from(Math.floor(e.getTime()/1e3)))),a.z.number().transform((e=>n.O$.from(e)))]))(),o=(()=>s.default(new Date(0)))(),l=(()=>s.default(new Date(Date.now()+31536e7)))();function c(e,t){if(!e)throw new i.x(t);return e}},94808:(e,t,r)=>{"use strict";r.d(t,{B:()=>l,C:()=>f,N:()=>u,a:()=>c,s:()=>h});var n=r(99816),a=r(60874),i=r(34243);const s=(()=>a.z.object({}).catchall(a.z.union([n.cw,a.z.unknown()])))(),o=(()=>a.z.union([a.z.array(s),s]).optional().nullable())(),l=(()=>a.z.object({name:a.z.union([a.z.string(),a.z.number()]).optional().nullable(),description:a.z.string().nullable().optional().nullable(),image:n.cx.nullable().optional(),animation_url:n.cx.optional().nullable()}))(),c=(()=>l.extend({external_url:n.cx.nullable().optional(),background_color:n.cy.optional().nullable(),properties:o,attributes:o}).catchall(a.z.union([n.cw,a.z.unknown()])))(),u=(()=>a.z.union([c,a.z.string()]))(),f=(()=>c.extend({id:a.z.string(),uri:a.z.string(),image:a.z.string().nullable().optional(),external_url:a.z.string().nullable().optional(),animation_url:a.z.string().nullable().optional()}))();async function h(e,t,a,s){if(!(0,i.i)(a)){const i=(await Promise.resolve().then(r.t.bind(r,49242,19))).default,o=e.getSigner(),l=e.getProvider(),c=new n.cq(o||l,a,i,e.options,e.storage),u=await e.getSignerAddress(),f=e.address;return(await c.read("allowance",[u,f])).lt(t)&&await c.sendTransaction("approve",[f,t]),s}s.value=t}},84888:(e,t,r)=>{"use strict";r.d(t,{A:()=>j,B:()=>ae,C:()=>re,D:()=>N,E:()=>q,F:()=>E,H:()=>G,I:()=>H,J:()=>U,K:()=>te,L:()=>ne,M:()=>me,S:()=>ie,a:()=>W,f:()=>F,n:()=>se,r:()=>ue,s:()=>fe,t:()=>he,u:()=>de,v:()=>pe,w:()=>ye,x:()=>ge,y:()=>ee,z:()=>D});var n=r(75422),a=r(6222),i=r(84530),s=r(68624),o=r(88062),l=r(2257),c=r(49716),u=r(83374),f=r(99816),h=r(34243),d=r(10470),m=r(64572),p=r(19778),y=r(51089),g=r.n(y),b=r(98842);class w{print(){w.print(this)}bufferIndexOf(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return this.binarySearch(e,t,p.Buffer.compare);return this.linearSearch(e,t,((e,t)=>e.equals(t)))}static binarySearch(e,t,r){let n=0,a=e.length-1;for(;n<=a;){const i=Math.floor((n+a)/2),s=r(e[i],t);if(0===s){for(let n=i-1;n>=0;n--)if(0!==r(e[n],t))return n+1;return 0}s<0?n=i+1:a=i-1}return-1}binarySearch(e,t,r){return w.binarySearch(e,t,r)}static linearSearch(e,t,r){for(let n=0;n<e.length;n++)if(r(e[n],t))return n;return-1}linearSearch(e,t,r){return w.linearSearch(e,t,r)}static bufferify(e){if(!p.Buffer.isBuffer(e)){if("object"===typeof e&&e.words)return p.Buffer.from(e.toString(x),"hex");if(w.isHexString(e))return p.Buffer.from(e.replace(/^0x/,""),"hex");if("string"===typeof e)return p.Buffer.from(e);if("bigint"===typeof e)return p.Buffer.from(e.toString(16),"hex");if(e instanceof Uint8Array)return p.Buffer.from(e.buffer);if("number"===typeof e){let t=e.toString();return t.length%2&&(t="0".concat(t)),p.Buffer.from(t,"hex")}if(ArrayBuffer.isView(e))return p.Buffer.from(e.buffer,e.byteOffset,e.byteLength)}return e}bigNumberify(e){return w.bigNumberify(e)}static bigNumberify(e){if("bigint"===typeof e)return e;if("string"===typeof e)return e.startsWith("0x")&&w.isHexString(e)?BigInt("0x"+e.replace("0x","").toString()):BigInt(e);if(p.Buffer.isBuffer(e))return BigInt("0x"+e.toString("hex"));if(e instanceof Uint8Array)return function(e){const t=Array.from(e).map((e=>e.toString(16).padStart(2,"0"))).join("");return BigInt("0x".concat(t))}(e);if("number"===typeof e)return BigInt(e);throw new Error("cannot bigNumberify")}static isHexString(e){return"string"===typeof e&&/^(0x)?[0-9A-Fa-f]*$/.test(e)}static print(e){console.log(e.toString())}bufferToHex(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return w.bufferToHex(e,t)}static bufferToHex(e){return"".concat(!(arguments.length>1&&void 0!==arguments[1])||arguments[1]?"0x":"").concat((e||p.Buffer.alloc(0)).toString("hex"))}bufferify(e){return w.bufferify(e)}bufferifyFn(e){return t=>{const r=e(t);if(p.Buffer.isBuffer(r))return r;if(this.isHexString(r))return p.Buffer.from(r.replace("0x",""),"hex");if("string"===typeof r)return p.Buffer.from(r);if("bigint"===typeof r)return p.Buffer.from(t.toString(16),"hex");if(ArrayBuffer.isView(r))return p.Buffer.from(r.buffer,r.byteOffset,r.byteLength);const n=function(e){const t=new Uint8Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=parseInt(e.substring(r,r+2),16);return t.buffer}(t.toString("hex")),a=function(e){const t=new Uint8Array(e);return Array.from(t).map((e=>e.toString(16).padStart(2,"0"))).join("")}(e(n));return p.Buffer.from(a,"hex")}}isHexString(e){return w.isHexString(e)}log2(e){return 1===e?0:1+this.log2(e/2|0)}zip(e,t){return e.map(((e,r)=>[e,t[r]]))}static hexZeroPad(e,t){return"0x"+e.replace("0x","").padStart(t,"0")}}var v=w;function x(e){const t=e.words,r=new ArrayBuffer(4*t.length),n=new Uint8Array(r);for(let a=0;a<t.length;a++)n[4*a]=t[a]>>24&255,n[4*a+1]=t[a]>>16&255,n[4*a+2]=t[a]>>8&255,n[4*a+3]=255&t[a];return r}class S extends v{constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(super(),(0,m.Z)(this,"duplicateOdd",!1),(0,m.Z)(this,"concatenator",p.Buffer.concat),(0,m.Z)(this,"hashLeaves",!1),(0,m.Z)(this,"isBitcoinTree",!1),(0,m.Z)(this,"leaves",[]),(0,m.Z)(this,"layers",[]),(0,m.Z)(this,"sortLeaves",!1),(0,m.Z)(this,"sortPairs",!1),(0,m.Z)(this,"sort",!1),(0,m.Z)(this,"fillDefaultHash",null),(0,m.Z)(this,"complete",!1),r.complete){if(r.isBitcoinTree)throw new Error('option "complete" is incompatible with "isBitcoinTree"');if(r.duplicateOdd)throw new Error('option "complete" is incompatible with "duplicateOdd"')}if(this.isBitcoinTree=!!r.isBitcoinTree,this.hashLeaves=!!r.hashLeaves,this.sortLeaves=!!r.sortLeaves,this.sortPairs=!!r.sortPairs,this.complete=!!r.complete,r.fillDefaultHash)if("function"===typeof r.fillDefaultHash)this.fillDefaultHash=r.fillDefaultHash;else{if(!p.Buffer.isBuffer(r.fillDefaultHash)&&"string"!==typeof r.fillDefaultHash)throw new Error('method "fillDefaultHash" must be a function, Buffer, or string');this.fillDefaultHash=(e,t)=>r.fillDefaultHash}this.sort=!!r.sort,this.sort&&(this.sortLeaves=!0,this.sortPairs=!0),this.duplicateOdd=!!r.duplicateOdd,r.concatenator&&(this.concatenator=r.concatenator),this.hashFn=this.bufferifyFn(t),this.processLeaves(e)}getOptions(){var e,t;return{complete:this.complete,isBitcoinTree:this.isBitcoinTree,hashLeaves:this.hashLeaves,sortLeaves:this.sortLeaves,sortPairs:this.sortPairs,sort:this.sort,fillDefaultHash:null!==(e=null===(t=this.fillDefaultHash)||void 0===t?void 0:t.toString())&&void 0!==e?e:null,duplicateOdd:this.duplicateOdd}}processLeaves(e){if(this.hashLeaves&&(e=e.map(this.hashFn)),this.leaves=e.map(this.bufferify),this.sortLeaves&&(this.leaves=this.leaves.sort(p.Buffer.compare)),this.fillDefaultHash)for(let t=this.leaves.length;t<Math.pow(2,Math.ceil(Math.log2(this.leaves.length)));t++)this.leaves.push(this.bufferify(this.fillDefaultHash(t,this.hashFn)));this.createHashes(this.leaves)}createHashes(e){for(this.layers=[e];e.length>1;){const t=this.layers.length;this.layers.push([]);const r=this.complete&&1===t&&!Number.isInteger(Math.log2(e.length))?2*e.length-2**Math.ceil(Math.log2(e.length)):e.length;for(let n=0;n<e.length;n+=2){if(n>=r){this.layers[t].push(...e.slice(r));break}if(n+1===e.length&&e.length%2===1){const r=e[e.length-1];let a=r;if(this.isBitcoinTree){a=this.hashFn(this.concatenator([g()(r),g()(r)])),a=g()(this.hashFn(a)),this.layers[t].push(a);continue}if(!this.duplicateOdd){this.layers[t].push(e[n]);continue}}const a=e[n],i=n+1===e.length?a:e[n+1];let s=null;s=this.isBitcoinTree?[g()(a),g()(i)]:[a,i],this.sortPairs&&s.sort(p.Buffer.compare);let o=this.hashFn(this.concatenator(s));this.isBitcoinTree&&(o=g()(this.hashFn(o))),this.layers[t].push(o)}e=this.layers[t]}}addLeaf(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&(e=this.hashFn(e)),this.processLeaves(this.leaves.concat(e))}addLeaves(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&(e=e.map(this.hashFn)),this.processLeaves(this.leaves.concat(e))}getLeaves(e){return Array.isArray(e)?(this.hashLeaves&&(e=e.map(this.hashFn),this.sortLeaves&&(e=e.sort(p.Buffer.compare))),this.leaves.filter((t=>-1!==this.bufferIndexOf(e,t,this.sortLeaves)))):this.leaves}getLeaf(e){return e<0||e>this.leaves.length-1?p.Buffer.from([]):this.leaves[e]}getLeafIndex(e){e=this.bufferify(e);const t=this.getLeaves();for(let r=0;r<t.length;r++){if(t[r].equals(e))return r}return-1}getLeafCount(){return this.leaves.length}getHexLeaves(){return this.leaves.map((e=>this.bufferToHex(e)))}static marshalLeaves(e){return JSON.stringify(e.map((e=>S.bufferToHex(e))),null,2)}static unmarshalLeaves(e){let t=null;if("string"===typeof e)t=JSON.parse(e);else{if(!(e instanceof Object))throw new Error("Expected type of string or object");t=e}if(!t)return[];if(!Array.isArray(t))throw new Error("Expected JSON string to be array");return t.map(S.bufferify)}getLayers(){return this.layers}getHexLayers(){return this.layers.reduce(((e,t)=>(Array.isArray(t)?e.push(t.map((e=>this.bufferToHex(e)))):e.push(t),e)),[])}getLayersFlat(){const e=this.layers.reduce(((e,t)=>(Array.isArray(t)?e.unshift(...t):e.unshift(t),e)),[]);return e.unshift(p.Buffer.from([0])),e}getHexLayersFlat(){return this.getLayersFlat().map((e=>this.bufferToHex(e)))}getLayerCount(){return this.getLayers().length}getRoot(){return 0===this.layers.length?p.Buffer.from([]):this.layers[this.layers.length-1][0]||p.Buffer.from([])}getHexRoot(){return this.bufferToHex(this.getRoot())}getProof(e,t){if("undefined"===typeof e)throw new Error("leaf is required");e=this.bufferify(e);const r=[];if(!Number.isInteger(t)){t=-1;for(let r=0;r<this.leaves.length;r++)0===p.Buffer.compare(e,this.leaves[r])&&(t=r)}if(t<=-1)return[];for(let n=0;n<this.layers.length;n++){const e=this.layers[n],a=t%2,i=a?t-1:this.isBitcoinTree&&t===e.length-1&&n<this.layers.length-1?t:t+1;i<e.length&&r.push({position:a?"left":"right",data:e[i]}),t=t/2|0}return r}getHexProof(e,t){return this.getProof(e,t).map((e=>this.bufferToHex(e.data)))}getProofs(){const e=[];return this.getProofsDFS(this.layers.length-1,0,[],e),e}getProofsDFS(e,t,r,n){const a=t%2;if(-1===e)return void(a||n.push([...r].reverse()));if(t>=this.layers[e].length)return;const i=this.layers[e],s=a?t-1:t+1;let o=!1;s<i.length&&(o=!0,r.push({position:a?"left":"right",data:i[s]}));const l=2*t,c=2*t+1;this.getProofsDFS(e-1,l,r,n),this.getProofsDFS(e-1,c,r,n),o&&r.splice(r.length-1,1)}getHexProofs(){return this.getProofs().map((e=>this.bufferToHex(e.data)))}getPositionalHexProof(e,t){return this.getProof(e,t).map((e=>["left"===e.position?0:1,this.bufferToHex(e.data)]))}getProofIndices(e,t){const r=2**t;let n=new Set;for(const l of e){let e=r+l;for(;e>1;)n.add(1^e),e=e/2|0}const a=e.map((e=>r+e)),i=Array.from(n).sort(((e,t)=>e-t)).reverse();n=a.concat(i);const s=new Set,o=[];for(let l of n)if(!s.has(l))for(o.push(l);l>1&&(s.add(l),s.has(1^l));)l=l/2|0;return o.filter((t=>!e.includes(t-r)))}getProofIndicesForUnevenTree(e,t){const r=Math.ceil(Math.log2(t)),n=[];for(let s=0;s<r;s++){t%2!==0&&n.push({index:s,leavesCount:t}),t=Math.ceil(t/2)}const a=[];let i=e;for(let s=0;s<r;s++){let e=i.map((e=>e%2===0?e+1:e-1)).filter((e=>!i.includes(e)));const t=n.find((e=>{let{index:t}=e;return t===s}));t&&i.includes(t.leavesCount-1)&&(e=e.slice(0,-1)),a.push(e),i=[...new Set(i.map((e=>e%2===0?e/2:e%2===0?(e+1)/2:(e-1)/2)))]}return a}getMultiProof(e,t){this.complete||console.warn("Warning: For correct multiProofs it's strongly recommended to set complete: true"),t||(t=e,e=this.getLayersFlat());if(this.isUnevenTree()&&t.every(Number.isInteger))return this.getMultiProofForUnevenTree(t);if(!t.every(Number.isInteger)){let e=t;this.sortPairs&&(e=e.sort(p.Buffer.compare));let r=e.map((e=>this.bufferIndexOf(this.leaves,e,this.sortLeaves))).sort(((e,t)=>e===t?0:e>t?1:-1));if(!r.every((e=>-1!==e)))throw new Error("Element does not exist in Merkle tree");const n=[],a=[];let i=[];for(let t=0;t<this.layers.length;t++){const e=this.layers[t];for(let t=0;t<r.length;t++){const s=r[t],o=this.getPairNode(e,s);n.push(e[s]),o&&a.push(o),i.push(s/2|0)}r=i.filter(((e,t,r)=>r.indexOf(e)===t)),i=[]}return a.filter((e=>!n.includes(e)))}return this.getProofIndices(t,Math.log2(e.length/2|0)).map((t=>e[t]))}getMultiProofForUnevenTree(e,t){t||(t=e,e=this.getLayers());let r=[],n=t;for(const a of e){const e=[];for(const r of n){if(r%2===0){const t=r+1;if(!n.includes(t)&&a[t]){e.push(a[t]);continue}}const t=r-1;n.includes(t)||!a[t]||e.push(a[t])}r=r.concat(e);const t=new Set;for(const r of n)r%2!==0?r%2!==0?t.add((r-1)/2):t.add((r+1)/2):t.add(r/2);n=Array.from(t)}return r}getHexMultiProof(e,t){return this.getMultiProof(e,t).map((e=>this.bufferToHex(e)))}getProofFlags(e,t){if(!Array.isArray(e)||e.length<=0)throw new Error("Invalid Inputs!");let r;if(r=e.every(Number.isInteger)?[...e].sort(((e,t)=>e===t?0:e>t?1:-1)):e.map((e=>this.bufferIndexOf(this.leaves,e,this.sortLeaves))).sort(((e,t)=>e===t?0:e>t?1:-1)),!r.every((e=>-1!==e)))throw new Error("Element does not exist in Merkle tree");const n=t.map((e=>this.bufferify(e))),a=[],i=[];for(let s=0;s<this.layers.length;s++){const e=this.layers[s];r=r.reduce(((t,r)=>{if(!a.includes(e[r])){const t=this.getPairNode(e,r),s=n.includes(e[r])||n.includes(t);t&&i.push(!s),a.push(e[r]),a.push(t)}return t.push(r/2|0),t}),[])}return i}verify(e,t,r){let n=this.bufferify(t);if(r=this.bufferify(r),!Array.isArray(e)||!t||!r)return!1;for(let a=0;a<e.length;a++){const t=e[a];let r=null,i=null;if("string"===typeof t)r=this.bufferify(t),i=!0;else if(Array.isArray(t))i=0===t[0],r=this.bufferify(t[1]);else if(p.Buffer.isBuffer(t))r=t,i=!0;else{if(!(t instanceof Object))throw new Error("Expected node to be of type string or object");r=this.bufferify(t.data),i="left"===t.position}const s=[];this.isBitcoinTree?(s.push(g()(n)),s[i?"unshift":"push"](g()(r)),n=this.hashFn(this.concatenator(s)),n=g()(this.hashFn(n))):this.sortPairs?-1===p.Buffer.compare(n,r)?(s.push(n,r),n=this.hashFn(this.concatenator(s))):(s.push(r,n),n=this.hashFn(this.concatenator(s))):(s.push(n),s[i?"unshift":"push"](r),n=this.hashFn(this.concatenator(s)))}return 0===p.Buffer.compare(n,r)}verifyMultiProof(e,t,r,n,a){if(this.isUnevenTree())return this.verifyMultiProofForUnevenTree(e,t,r,n,a);const i=Math.ceil(Math.log2(n));e=this.bufferify(e),r=r.map((e=>this.bufferify(e))),a=a.map((e=>this.bufferify(e)));const s={};for(const[c,u]of this.zip(t,r))s[2**i+c]=u;for(const[c,u]of this.zip(this.getProofIndices(t,i),a))s[c]=u;let o=Object.keys(s).map((e=>Number(e))).sort(((e,t)=>e-t));o=o.slice(0,o.length-1);let l=0;for(;l<o.length;){const e=o[l];if(e>=2&&{}.hasOwnProperty.call(s,1^e)){let t=[s[e-e%2],s[e-e%2+1]];this.sortPairs&&(t=t.sort(p.Buffer.compare));const r=t[1]?this.hashFn(this.concatenator(t)):t[0];s[e/2|0]=r,o.push(e/2|0)}l+=1}return!t.length||{}.hasOwnProperty.call(s,1)&&s[1].equals(e)}verifyMultiProofWithFlags(e,t,r,n){e=this.bufferify(e),t=t.map(this.bufferify),r=r.map(this.bufferify);const a=t.length,i=n.length,s=[];let o=0,l=0,c=0;for(let u=0;u<i;u++){const e=[n[u]?o<a?t[o++]:s[l++]:r[c++],o<a?t[o++]:s[l++]].sort(p.Buffer.compare);s[u]=this.hashFn(this.concatenator(e))}return 0===p.Buffer.compare(s[i-1],e)}verifyMultiProofForUnevenTree(e,t,r,n,a){e=this.bufferify(e),r=r.map((e=>this.bufferify(e))),a=a.map((e=>this.bufferify(e)));const i=this.calculateRootForUnevenTree(t,r,n,a);return e.equals(i)}getDepth(){return this.getLayers().length-1}getLayersAsObject(){const e=this.getLayers().map((e=>e.map((e=>this.bufferToHex(e,!1))))),t=[];for(let r=0;r<e.length;r++){const n=[];for(let a=0;a<e[r].length;a++){const i={[e[r][a]]:null};if(t.length){i[e[r][a]]={};const n=t.shift(),s=Object.keys(n)[0];if(i[e[r][a]][s]=n[s],t.length){const n=t.shift(),s=Object.keys(n)[0];i[e[r][a]][s]=n[s]}}n.push(i)}t.push(...n)}return t[0]}resetTree(){this.leaves=[],this.layers=[]}getPairNode(e,t){const r=t%2===0?t+1:t-1;return r<e.length?e[r]:null}toTreeString(){const e=this.getLayersAsObject();return(0,b.asTree)(e,!0,!1)}toString(){return this.toTreeString()}isUnevenTree(e){const t=(null===e||void 0===e?void 0:e.length)||this.getDepth();return!this.isPowOf2(t)}isPowOf2(e){return e&&!(e&e-1)}calculateRootForUnevenTree(e,t,r,n){const a=this.zip(e,t).sort(((e,t)=>{let[r]=e,[n]=t;return r-n})),i=a.map((e=>{let[t]=e;return t})),s=this.getProofIndicesForUnevenTree(i,r);let o=0;const l=[];for(let u=0;u<s.length;u++){const e=s[u],t=o;o+=e.length,l[u]=this.zip(e,n.slice(t,o))}const c=[a];for(let u=0;u<l.length;u++){const e=l[u].concat(c[u]).sort(((e,t)=>{let[r]=e,[n]=t;return r-n})).map((e=>{let[,t]=e;return t})),t=c[u].map((e=>{let[t]=e;return t})),r=[...new Set(t.map((e=>e%2===0?e/2:e%2===0?(e+1)/2:(e-1)/2)))],n=[];for(let a=0;a<r.length;a++){const t=r[a],i=e[2*a],s=e[2*a+1],o=s?this.hashFn(this.concatenator([i,s])):i;n.push([t,o])}c.push(n)}return c[c.length-1][0][1]}}var T=r(69516),P=r(60874),k=r(94808);const B={randomUUID:"undefined"!==typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let C;const A=new Uint8Array(16);function L(){if(!C&&(C="undefined"!==typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!C))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return C(A)}const I=[];for(let be=0;be<256;++be)I.push((be+256).toString(16).slice(1));function O(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return I[e[t+0]]+I[e[t+1]]+I[e[t+2]]+I[e[t+3]]+"-"+I[e[t+4]]+I[e[t+5]]+"-"+I[e[t+6]]+I[e[t+7]]+"-"+I[e[t+8]]+I[e[t+9]]+"-"+I[e[t+10]]+I[e[t+11]]+I[e[t+12]]+I[e[t+13]]+I[e[t+14]]+I[e[t+15]]}const z=function(e,t,r){if(B.randomUUID&&!t&&!e)return B.randomUUID();const n=(e=e||{}).random||(e.rng||L)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return O(n)};function H(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot,pricePerToken:e.pricePerToken,currency:e.currency,quantityLimitPerTransaction:e.maxClaimablePerWallet,waitTimeInSecondsBetweenClaims:e.waitTimeInSecondsBetweenClaims||0}}function U(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot,pricePerToken:e.pricePerToken,currency:e.currency,quantityLimitPerWallet:e.maxClaimablePerWallet,metadata:e.metadata||""}}function N(e,t){return"unlimited"===e?n.Bz:a.parseUnits(e,t)}async function R(e){const t=25e3,r=Array.from({length:Math.ceil(e.length/t)},((r,n)=>e.slice(n*t,n*t+t))),n=[],a=await Promise.all(r.map((e=>f.bK.parseAsync(e))));for(const i of a)n.push(...i);return n}let E=function(e){return e[e.V1=1]="V1",e[e.V2=2]="V2",e}({});class M{constructor(e,t,r,n,a){this.storage=e,this.shardNybbles=n,this.baseUri=t,this.originalEntriesUri=r,this.tokenDecimals=a,this.shards={},this.trees={}}static async fromUri(e,t){try{const r=await t.downloadJSON(e);if(r.isShardedMerkleTree)return M.fromShardedMerkleTreeInfo(r,t)}catch(r){return}}static async fromShardedMerkleTreeInfo(e,t){return new M(t,e.baseUri,e.originalEntriesUri,e.shardNybbles,e.tokenDecimals)}static hashEntry(e,t,r,n){switch(n){case E.V1:return i.keccak256(["address","uint256"],[e.address,N(e.maxClaimable,t)]);case E.V2:return i.keccak256(["address","uint256","uint256","address"],[e.address,N(e.maxClaimable,t),N(e.price||"unlimited",r),e.currencyAddress||s.d])}}static async fetchAndCacheDecimals(e,t,r){if(!r)return 18;let n=e[r];if(void 0===n){n=(await(0,h.f)(t,r)).decimals,e[r]=n}return n}static async buildAndUpload(e,t,r,n,a){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2;const s=await R(e),l={};for(const o of s){const e=o.address.slice(2,2+i).toLowerCase();void 0===l[e]&&(l[e]=[]),l[e].push(o)}const c={},u=await Promise.all(Object.entries(l).map((async e=>{let[n,i]=e;return[n,new S(await Promise.all(i.map((async e=>{const n=await M.fetchAndCacheDecimals(c,r,e.currencyAddress);return M.hashEntry(e,t,n,a)}))),o.keccak256,{sort:!0}).getHexRoot()]}))),f=Object.fromEntries(u),h=new S(Object.values(f),o.keccak256,{sort:!0}),d=[];for(const[o,b]of Object.entries(l)){const e={proofs:h.getProof(f[o]).map((e=>"0x"+e.data.toString("hex"))),entries:b};d.push({data:JSON.stringify(e),name:"".concat(o,".json")})}const m=await n.uploadBatch(d),p=m[0].slice(0,m[0].lastIndexOf("/")),y=await n.upload(s),g={merkleRoot:h.getHexRoot(),baseUri:p,originalEntriesUri:y,shardNybbles:i,tokenDecimals:t,isShardedMerkleTree:!0};return{shardedMerkleInfo:g,uri:await n.upload(g)}}async getProof(e,t,r){const n=e.slice(2,2+this.shardNybbles).toLowerCase();let a=this.shards[n];const i={};if(void 0===a)try{const e=this.baseUri.endsWith("/")?this.baseUri:"".concat(this.baseUri,"/");a=this.shards[n]=await this.storage.downloadJSON("".concat(e).concat(n,".json"));const s=await Promise.all(a.entries.map((async e=>{const n=await M.fetchAndCacheDecimals(i,t,e.currencyAddress);return M.hashEntry(e,this.tokenDecimals,n,r)})));this.trees[n]=new S(s,o.keccak256,{sort:!0})}catch(h){return null}const s=a.entries.find((t=>t.address.toLowerCase()===e.toLowerCase()));if(!s)return null;const l=await M.fetchAndCacheDecimals(i,t,s.currencyAddress),c=M.hashEntry(s,this.tokenDecimals,l,r),u=this.trees[n].getProof(c).map((e=>"0x"+e.data.toString("hex")));return f.bL.parseAsync({...s,proof:u.concat(a.proofs)})}async getAllEntries(){try{return await this.storage.downloadJSON(this.originalEntriesUri)}catch(e){return console.warn("Could not fetch original snapshot entries",e),[]}}}async function F(e,t,r,n,a,i){if(!r)return null;const s=r[t];if(s){const r=await a.downloadJSON(s);if(r.isShardedMerkleTree&&r.merkleRoot===t){const t=await M.fromShardedMerkleTreeInfo(r,a);return await t.getProof(e,n,i)}const o=await f.bM.parseAsync(r);if(t===o.merkleRoot)return o.claims.find((t=>t.address.toLowerCase()===e.toLowerCase()))||null}return null}function D(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot.toString(),pricePerToken:e.pricePerToken,currency:e.currency,maxClaimablePerWallet:e.quantityLimitPerTransaction,waitTimeInSecondsBetweenClaims:e.waitTimeInSecondsBetweenClaims}}function j(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot.toString(),pricePerToken:e.pricePerToken,currency:e.currency,maxClaimablePerWallet:e.quantityLimitPerWallet,waitTimeInSecondsBetweenClaims:0,metadata:e.metadata}}async function W(e,t,n,i,s){const o=e.getSigner(),c=e.getProvider(),u=(await Promise.resolve().then(r.t.bind(r,49242,19))).default,h=new f.cq(o||c,t,u,e.options,e.storage),d=await e.getSignerAddress(),m=e.address,p=await h.read("allowance",[d,m]),y=l.O$.from(n).mul(l.O$.from(i)).div(a.parseUnits("1",s));p.lt(y)&&await h.sendTransaction("approve",[m,p.add(y)])}async function q(e,t,r,i,o,u,f,m,p){let y=N(r.maxClaimablePerWallet,o),g=[c.hexZeroPad([0],32)],b=r.price,w=r.currencyAddress;try{if(!r.merkleRootHash.toString().startsWith(s.d)){const t=await F(e,r.merkleRootHash.toString(),await i(),u.getProvider(),f,p);if(t)g=t.proof,y="unlimited"===t.maxClaimable?n.Bz:a.parseUnits(t.maxClaimable,o),b=void 0===t.price||"unlimited"===t.price?n.Bz:await(0,d.n)(u.getProvider(),t.price,t.currencyAddress||s.d),w=t.currencyAddress||s.d;else if(p===E.V1)throw new Error("No claim found for this address")}}catch(T){if("No claim found for this address"===(null===T||void 0===T?void 0:T.message))throw T;console.warn("failed to check claim condition merkle root hash, continuing anyways",T)}const v=await u.getCallOverrides()||{},x=b.toString()!==n.Bz.toString()?b:r.price,S=w!==s.d?w:r.currencyAddress;return x.gt(0)&&((0,h.i)(S)?v.value=l.O$.from(x).mul(t).div(a.parseUnits("1",o)):m&&await W(u,S,x,t,o)),{overrides:v,proofs:g,maxClaimable:y,price:x,currencyAddress:S,priceInProof:b,currencyAddressInProof:w}}const V=(()=>P.z.object({name:P.z.string(),symbol:P.z.string(),decimals:P.z.number()}))(),Z=(()=>V.extend({value:f.b5,displayValue:P.z.string()}))(),J=(()=>P.z.object({name:P.z.string().optional()}).catchall(P.z.unknown()))(),$=(()=>P.z.object({startTime:T.S,currencyAddress:P.z.string().default(f.aV),price:f.cv.default(0),maxClaimableSupply:f.cz,maxClaimablePerWallet:f.cz,waitInSeconds:f.b6.default(0),merkleRootHash:f.cA.default(c.hexZeroPad([0],32)),snapshot:P.z.optional(f.bK).nullable(),metadata:J.optional()}))(),_=(()=>P.z.array($))(),K=(()=>$.extend({availableSupply:f.cz,currentMintSupply:f.cz,currencyMetadata:Z.default({value:l.O$.from("0"),displayValue:"0",symbol:"",decimals:18,name:""}),price:f.b5,waitInSeconds:f.b5,startTime:f.b5.transform((e=>new Date(1e3*e.toNumber()))),snapshot:f.bK.optional().nullable()}))();async function Y(e,t,r,n,a){const i=[],s=await Promise.all(e.map((async e=>{if(e.snapshot&&e.snapshot.length>0){const s=await async function(e,t,r,n,a){const i=await R(e),s=i.map((e=>e.address));if(new Set(s).size<s.length)throw new f.s;const o=await M.buildAndUpload(i,t,r,n,a);return{merkleRoot:o.shardedMerkleInfo.merkleRoot,snapshotUri:o.uri}}(e.snapshot,t,r,n,a);i.push(s),e.merkleRootHash=s.merkleRoot}else e.merkleRootHash=c.hexZeroPad([0],32);return e})));return{inputsWithSnapshots:s,snapshotInfos:i}}async function G(e,t,r,n,a){const{inputsWithSnapshots:i,snapshotInfos:o}=await Y(e,t,r,n,a),c=await _.parseAsync(i),u=(await Promise.all(c.map((e=>async function(e,t,r,n){const a=e.currencyAddress===s.d?f.aV:e.currencyAddress,i=N(e.maxClaimableSupply,t),o=N(e.maxClaimablePerWallet,t);let l;return e.metadata&&(l="string"===typeof e.metadata?e.metadata:await n.upload(e.metadata)),{startTimestamp:e.startTime,maxClaimableSupply:i,supplyClaimed:0,maxClaimablePerWallet:o,pricePerToken:await(0,d.n)(r,e.price,a),currency:a,merkleRoot:e.merkleRootHash.toString(),waitTimeInSecondsBetweenClaims:e.waitInSeconds||0,metadata:l}}(e,t,r,n))))).sort(((e,t)=>function(e,t){const r=l.O$.from(e),n=l.O$.from(t);return r.eq(n)?0:r.gt(n)?1:-1}(e.startTimestamp,t.startTimestamp)));return{snapshotInfos:o,sortedConditions:u}}async function Q(e,t,r){if(!t)return null;const n=t[e];if(n){const t=await r.downloadJSON(n);if(t.isShardedMerkleTree&&t.merkleRoot===e){const e=await M.fromUri(n,r);return(null===e||void 0===e?void 0:e.getAllEntries())||null}{const r=await f.bM.parseAsync(t);if(e===r.merkleRoot)return r.claims.map((e=>({address:e.address,maxClaimable:e.maxClaimable,price:e.price,currencyAddress:e.currencyAddress})))}}return null}function X(e,t){return e.toString()===n.Bz.toString()?"unlimited":a.formatUnits(e,t)}async function ee(e,t,r,n,a,i){var s;const o=await(0,h.a)(r,e.currency,e.pricePerToken),c=X(e.maxClaimableSupply,t),u=X(e.maxClaimablePerWallet,t),f=X(l.O$.from(e.maxClaimableSupply).sub(e.supplyClaimed),t),d=X(e.supplyClaimed,t);let m;return e.metadata&&(m=await a.downloadJSON(e.metadata)),K.parseAsync({startTime:e.startTimestamp,maxClaimableSupply:c,maxClaimablePerWallet:u,currentMintSupply:d,availableSupply:f,waitInSeconds:null===(s=e.waitTimeInSecondsBetweenClaims)||void 0===s?void 0:s.toString(),price:l.O$.from(e.pricePerToken),currency:e.currency,currencyAddress:e.currency,currencyMetadata:o,merkleRootHash:e.merkleRoot,snapshot:i?await Q(e.merkleRoot,n,a):void 0,metadata:m})}async function te(e,t,r){if(e>=r.length)throw Error("Index out of bounds - got index: ".concat(e," with ").concat(r.length," conditions"));const n=r[e].currencyMetadata.decimals,i=r[e].price,s=a.formatUnits(i,n),o=await $.parseAsync({...r[e],price:s,...t}),l=await K.parseAsync({...o,price:i});return r.map(((t,r)=>{let i;i=r===e?l:t;const s=a.formatUnits(i.price,n);return{...i,price:s}}))}let re=function(e){return e.NotEnoughSupply="There is not enough supply to claim.",e.AddressNotAllowed="This address is not on the allowlist.",e.WaitBeforeNextClaimTransaction="Not enough time since last claim transaction. Please wait.",e.ClaimPhaseNotStarted="Claim phase has not started yet.",e.AlreadyClaimed="You have already claimed the token.",e.WrongPriceOrCurrency="Incorrect price or currency.",e.OverMaxClaimablePerWallet="Cannot claim more than maximum allowed quantity.",e.NotEnoughTokens="There are not enough tokens in the wallet to pay for the claim.",e.NoActiveClaimPhase="There is no active claim phase at the moment. Please check back in later.",e.NoClaimConditionSet="There is no claim condition set.",e.NoWallet="No wallet connected.",e.Unknown="No claim conditions found.",e}({});function ne(e){if(void 0===e){const e=Buffer.alloc(16);return z({},e),c.hexlify(u.Y0(e.toString("hex")))}return c.hexlify(e)}const ae=(()=>P.z.object({to:f.b9.refine((e=>e.toLowerCase()!==s.d),{message:"Cannot create payload to mint to zero address"}),price:f.cv.default(0),currencyAddress:f.b8.default(f.aV),mintStartTime:T.S,mintEndTime:T.E,uid:P.z.string().optional().transform((e=>ne(e))),primarySaleRecipient:f.b9.default(s.d)}))(),ie=(()=>ae.extend({quantity:f.cv}))(),se=(()=>ie.extend({mintStartTime:f.b5,mintEndTime:f.b5}))(),oe=(()=>ae.extend({metadata:k.N,royaltyRecipient:P.z.string().default(s.d),royaltyBps:f.cB.default(0)}))(),le=(()=>oe.extend({metadata:k.N.default(""),uri:P.z.string(),royaltyBps:f.b5,mintStartTime:f.b5,mintEndTime:f.b5}))(),ce=(()=>oe.extend({metadata:k.N.default(""),quantity:f.b6}))(),ue=(()=>ce.extend({tokenId:f.b6}))(),fe=(()=>le.extend({tokenId:f.b5,quantity:f.b5}))(),he=(()=>oe.extend({metadata:k.N.default(""),quantity:f.b5.default(1)}))(),de=(()=>le.extend({quantity:f.b5.default(1)}))(),me=[{name:"to",type:"address"},{name:"primarySaleRecipient",type:"address"},{name:"quantity",type:"uint256"},{name:"price",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],pe=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"uri",type:"string"},{name:"price",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],ye=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"tokenId",type:"uint256"},{name:"uri",type:"string"},{name:"quantity",type:"uint256"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],ge=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"uri",type:"string"},{name:"quantity",type:"uint256"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}]},51089:e=>{e.exports=function(e){for(var t=new Buffer(e.length),r=0,n=e.length-1;r<=n;++r,--n)t[r]=e[n],t[n]=e[r];return t}},98842:function(e){e.exports=function(){function e(e,t){var r=t?"\u2514":"\u251c";return r+=e?"\u2500 ":"\u2500\u2500\u2510"}function t(e,t){var r=[];for(var n in e)e.hasOwnProperty(n)&&(t&&"function"===typeof e[n]||r.push(n));return r}function r(n,a,i,s,o,l,c){var u,f,h="",d=0,m=s.slice(0);if(m.push([a,i])&&s.length>0&&(s.forEach((function(e,t){t>0&&(h+=(e[1]?" ":"\u2502")+"  "),f||e[0]!==a||(f=!0)})),h+=e(n,i)+n,o&&("object"!==typeof a||a instanceof Date)&&(h+=": "+a),f&&(h+=" (circular ref.)"),c(h)),!f&&"object"===typeof a){var p=t(a,l);p.forEach((function(e){u=++d===p.length,r(e,a[e],u,m,o,l,c)}))}}var n={asLines:function(e,t,n,a){r(".",e,!1,[],t,"function"!==typeof n&&n,a||n)},asTree:function(e,t,n){var a="";return r(".",e,!1,[],t,n,(function(e){a+=e+"\n"})),a}};return n}()}}]);
//# sourceMappingURL=4888.1a01f169.chunk.js.map